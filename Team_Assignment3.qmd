---
title: "통계자료분석 팀프로젝트 - Reyemes Affiar"
author: "2023-2학기 통계자료분석 1조 김재현"
date: "2023-12-06"
date-modified: "2023-12-09"
format: html
---

<details>
<summary>데이터 불러오기부터 Area Code 맞지 않는 행 수정까지 접힘</summary>

```{r setup, include=FALSE}
#| label: 사용할 패키지 불러오기

# 사용할 패키지 불러오기
library(readxl)
library(dplyr)
library(DescTools)
library(agricolae)
library(tidyverse)
```

```{r}
#| label: 데이터 불러오기
# 데이터 불러오기

rawdata = read_excel("./Team_Assignment/Reyeme2.xls")
data1 = as.data.frame(rawdata)
data1$FirstDate = as.Date(as.numeric(as.character(data1$FirstDate)),origin="1899-12-30") #FirstDate 변수 class를 Date로 변경
```

```{r}
#| label: 결측값 존재 확인
# 결측값 존재 확인

sum(is.na(data1))
```

:::{.callout-note}
결측값 9개 존재.
:::

```{r}
#| label: 결측값 있는 행 확인
# 결측값 있는 행 확인

which(rowSums(is.na(data1)) > 0)

```

:::{.callout-note collapse=true}
결측값 중 한개를 제외하곤 모두 UNIT 열 값이다. UNIT는 건물내 특정 주거공간을 나타내는 호수(ex 101호, 102호)이다. Reyem Affiar가 구매하려는 건물의 UNIT는 주어져있지 않기 때문에 Reyem Affiar가 구매하려는 건물 가격을 추정하는데에 UNIT 변수는 사용하지 않을 것으로 예상한다. 나머지 한개의 결측값은 First Date에서 나타났으며, 254행에 있다. FirstDate열은 사용할 예정이므로 254행만 제외한다.
:::

```{r}
#| label: 데이터 클래스 확인
# 각 독립변수의 클래스 확인

str(data1)
```

:::{.callout-note}
UNIT 변수와 함께, 바로 선형회귀분석에 사용할 수 없는 character, Date 클래스를 가진 변수 Area, Address, FirstDate, CloseDate를 제외하고 선형회귀분석을 진행한다.
:::

```{r}
#| label: M1 = 모든 변수 사용, M2 = M1에서 UNIT, AREA, Address, FirstDate, CloseDate 제외
# M1 = 모든 변수 사용, M2 = M1에서 UNIT, AREA, Address, FirstDate, CloseDate 제외


M1 = lm(SalePrice ~ .  ,data1)
M2 = update(M1, . ~ . - Unit - Area -Address - FirstDate - CloseDate)
summary(M2)
```

:::{.callout-note}

Sale Price와 직접적으로 관련되어 다른 변수들의 중요성을 가리는 변수인 Price1(FirstPrice), Price2(LastPrice)를 제외한다.

:::

```{r}
#| label: M3 = M2에서 Price1, Price2 제외
# M2에서 Price1, Price2 제외, M3 회귀분석 결과확인


M3 = update(M2, . ~ . - Price1 - Price2)
summary(M3)
```
```{r}
anova(M3)
```




::: {.callout-important}
**이제 각 변수를 살펴보면서 논리적으로 변수를 조정하거나, 종속변수(Sale Price)를 예측하는데에 성능을 개선만한 새로운 변수를 추가한다. **
:::

### Area Code 부터 살펴보면...

일단 Area와 Area Code가 잘못 매칭된 93행과, 101행의 Area Code를 변경해준다.(데이터 오류 수정)

```{r}
#| label: 데이터 프레임 복사
# 데이터 프레임 복사(기존 데이터와의 비교를 위해)

data2 = data1
```

```{r}
#| label: 잘못 매칭된 AreaCode 변경

# 잘못 매칭된 AreaCode 변경

data2$AreaCode[93] = 10 # N 지역
data2$AreaCode[101] = 4 # CP 지역
```

#### Area Code에 대한 분산 분석

각 Area Code의 평균 매매가에 유의한 차이가 있는지 확인해본다.

```{r}
#| label: A1 = AreaCode와 SalePrice 분산분석
# A1 = AreaCode와 SalePrice 분산분석

A1 = aov(SalePrice ~ AreaCode, data2)
anova(A1)
```

ANOVA 결과 AreaCode별로 평균 SalePrice가 다르다는 것을 확인했다. 그렇다면 사후검정을 통해 어느 AreaCode간에 평균 SalePrice 차이가 있는지 확인이 필요하다.

사후검정 방법 중 검정력이 높고, 그룹간 반복수가 달라도 사용할 수 있는 fisher LSD 검정을 사용했다.

```{r}
#| label: Fisher LSD를 이용한 사후검정
# Fisher LSD를 이용한 사후검정

data2$AreaCode = as.factor(data2$AreaCode) 
#PostHocTest를 하기위해선 AreaCode가 factor형이어야 할 수 있다. 때문에 AreaCode를 factor로 변경한다.

A1 = aov(SalePrice ~ AreaCode, data2) 
# AreaCode를 factor로 변경한 후 다시 분산분석을 한다.

PostHocTest(A1, method = "lsd") # Fisher LSD를 한다.

```

Fisher LSD의 결과를 사용하기에는 결과가 너무 뒤죽박죽이라 그래프 하나로 표현하기 어려웠다. 때문에, 가장 보수적인 Bonferroni 검정도 같이 진행했다.

```{r}
#| label: Bonferroni 검정
# Bonferroni 검정

PostHocTest(A1, method = "bonferroni") 
```

Bonferroni검정에 의하면 AreaCode = 5(Area = East Cambridge) 인 경우의 평균값만 나머지 그룹과 유의하게 다르다는 결과를 보여줬다. 이는 Fisher LSD의 결과보다는 검정력이 떨어지지만 가장 통계적으로 유의하기 때문에 Bonferroni 검정에 의한 결과를 사용하기로 했다. 

"AreaCode = 5"와 "그 이외"로 나누는 카테고리가 두 개인 더미변수를 구성해보면

```{r}
#| label: 더미변수 만들기
# 더미변수 만들기

data2$AreaCodeM = ifelse(data2$AreaCode == 5, 1, 0)
```

```{r}
#| label: M4 - AreaCode를 이용한 회귀분석
M4 = lm(SalePrice ~ AreaCode, data2)
summary(M4)
```

```{r}
#| label: M5 - AreaCodeM 더미변수 사용시 결과
# M5 - AreaCodeM 을 이용한 회귀분석 결과

M5 = lm(SalePrice ~ AreaCodeM, data2)
summary(M5)
```

M4(AreaCode를 이용한) 단순회귀분석시 $adj-R^2$
```
Adjusted R-squared:  0.1795
```

M5(AreaCodeM을 이용한) 단순회귀분석시 $adj-R^2$

```
Adjusted R-squared:  0.1617 
```

:::{.callout-note}
SalePrice와 AreaCode의 분산분석 결과(Bonferroni 검정)를 통해 도출한 새로운 변수 AreaCodeM을 회귀분석에 활용했을 때, SalesPrice와의 단순회귀분석시 오히려 AreaCode를 사용한 것 보다 낮은 $adj-R^2$ 값을 보여줬다.
:::

</details>

이렇게 분산분석 결과를 통해 나누어서 다중회귀분석을 했을 때 adj-R^2가 낮아지는 이유는 Area가 혼란변수가 되었기 때문이라 생각했다.

때문에 Area를 추가로 포함시켜 이원배치 분산분석을 진행해보았다.

### 이원배치 분산분석 

```{r}
#| label: A2 = AreaCode와 Interior 두개의 독립변수와 종속변수 SalePrice의 분산분석
# A2 = AreaCode와 Interior 두개의 독립변수와 종속변수 SalePrice의 분산분석

A2 = aov(SalePrice ~ AreaCode*Interior, data2)
anova(A2)
```


```
Analysis of Variance Table

Response: SalePrice
           Df     Sum Sq    Mean Sq F value Pr(>F)  
AreaCode    1 4.3011e+10 4.3011e+10  5.3984 0.0206 *
Residuals 454 3.6172e+12 7.9675e+09                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

```


```{r}
interaction.plot(data2$AreaCode,data2$Interior,data2$SalePrice)
```

```{r}
ggplot(data2, aes(x=AreaCode, y=SalePrice, group=Interior, color=Interior)) +
  geom_line(stat='summary',fun = mean) +
  geom_point(stat='summary', fun = mean) +
  labs(title="Interaction Plot with ggplot2",
       x="AreaCode",
       y="SalePrice",
       color="Interior")
```

이원배치 분산분석을 진행하려면 numeric인 Interior 변수를 그룹으로 나눠야 한다.

때문에 Interior대신 Interior와 관계가 높은 Rooms(혹은 Bed 혹은 Bath)를 사용하면 되지 않을까하여 둘의 상관관계를 확인했다.

```{r}
cor(data2$Interior, data2$Rooms)
cor(data2$Interior, data2$Bed)
cor(data2$Interior, data2$Bath)
```
이중에서 Rooms가 Interior와 높은 상관관계를 보여주고 있다.

```{r}
plot(data2$Interior, data2$Rooms)
```

```{r}
#| label: A3 = AreaCode와 Rooms 두개의 독립변수와 종속변수 SalePrice의 분산분석
# A3 = AreaCode와 Rooms 두개의 독립변수와 종속변수 SalePrice의 분산분석

A3 = aov(SalePrice ~ AreaCode*Rooms, data2)
anova(A3)
```

```{r}

interaction.plot(data2$AreaCode,data2$Rooms,data2$SalePrice)
```


```{r}
data2$Rooms = as.factor(data2$Rooms)
ggplot(data2, aes(x=AreaCode, y=SalePrice, group=Rooms, color=Rooms)) +
  geom_line(stat='summary',fun = mean) +
  geom_point(stat='summary', fun = mean) +
  labs(title="Interaction Plot with ggplot2",
       x="AreaCode",
       y="SalePrice",
       color="Rooms")
```

```{r}
filtered_data = data2 %>% filter(Rooms %in% c(4,5,6))
```

```{r}
ggplot(filtered_data, aes(x=AreaCode, y=SalePrice, group=Rooms, color=Rooms)) +
  geom_line(stat='summary',fun = median) +
  geom_point(stat='summary', fun = median) +
  labs(title="Interaction Plot with ggplot2",
       x="AreaCode",
       y="SalePrice",
       color="Rooms")
```
```{r}
#| label: A3 = AreaCode와 Interior 두개의 독립변수와 종속변수 SalePrice의 분산분석
# A3 = AreaCode와 Interior 두개의 독립변수와 종속변수 SalePrice의 분산분석

A3 = aov(SalePrice ~ AreaCode, filtered_data)
anova(A3)
```

```{r}
PostHocTest(A3, method = "lsd") 
```

```{r}
filtered_data2 = filtered_data %>% filter(Rooms %in% c(4,5))
A4 = aov(SalePrice ~ AreaCode, filtered_data2)
anova(A4)
```
```{r}
ggplot(filtered_data2, aes(x=AreaCode, y=SalePrice, group=Rooms, color=Rooms)) +
  geom_line(stat='summary',fun = median) +
  geom_point(stat='summary', fun = median) +
  labs(title="Interaction Plot with ggplot2",
       x="AreaCode",
       y="SalePrice",
       color="Rooms")
```

```{r}
PostHocTest(A4, method = "lsd") 
```

```{r}
plot(LSD.test(A4, "AreaCode", p.adj = "none"))
```

